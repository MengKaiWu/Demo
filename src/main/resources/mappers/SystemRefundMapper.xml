<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wmk.paydemo.dao.SystemRefundMapper">
  <resultMap id="BaseResultMap" type="com.wmk.paydemo.entity.SystemRefund">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="buyer_logon_id" jdbcType="VARCHAR" property="buyerLogonId" />
    <result column="buyer_user_id" jdbcType="VARCHAR" property="buyerUserId" />
    <result column="fund_change" jdbcType="VARCHAR" property="fundChange" />
    <result column="gmt_refund_pay" jdbcType="TIMESTAMP" property="gmtRefundPay" />
    <result column="refund_fee" jdbcType="DOUBLE" property="refundFee" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, out_trade_no, trade_no, buyer_logon_id, buyer_user_id, fund_change, gmt_refund_pay, 
    refund_fee
  </sql>
  <select id="selectByExample" parameterType="com.wmk.paydemo.entity.SystemRefundExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from system_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from system_refund
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from system_refund
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wmk.paydemo.entity.SystemRefund">
    insert into system_refund (id, out_trade_no, trade_no, 
      buyer_logon_id, buyer_user_id, fund_change, 
      gmt_refund_pay, refund_fee)
    values (#{id,jdbcType=BIGINT}, #{outTradeNo,jdbcType=VARCHAR}, #{tradeNo,jdbcType=VARCHAR}, 
      #{buyerLogonId,jdbcType=VARCHAR}, #{buyerUserId,jdbcType=VARCHAR}, #{fundChange,jdbcType=VARCHAR}, 
      #{gmtRefundPay,jdbcType=TIMESTAMP}, #{refundFee,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.wmk.paydemo.entity.SystemRefund">
    insert into system_refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="buyerLogonId != null">
        buyer_logon_id,
      </if>
      <if test="buyerUserId != null">
        buyer_user_id,
      </if>
      <if test="fundChange != null">
        fund_change,
      </if>
      <if test="gmtRefundPay != null">
        gmt_refund_pay,
      </if>
      <if test="refundFee != null">
        refund_fee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="buyerLogonId != null">
        #{buyerLogonId,jdbcType=VARCHAR},
      </if>
      <if test="buyerUserId != null">
        #{buyerUserId,jdbcType=VARCHAR},
      </if>
      <if test="fundChange != null">
        #{fundChange,jdbcType=VARCHAR},
      </if>
      <if test="gmtRefundPay != null">
        #{gmtRefundPay,jdbcType=TIMESTAMP},
      </if>
      <if test="refundFee != null">
        #{refundFee,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wmk.paydemo.entity.SystemRefund">
    update system_refund
    <set>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="buyerLogonId != null">
        buyer_logon_id = #{buyerLogonId,jdbcType=VARCHAR},
      </if>
      <if test="buyerUserId != null">
        buyer_user_id = #{buyerUserId,jdbcType=VARCHAR},
      </if>
      <if test="fundChange != null">
        fund_change = #{fundChange,jdbcType=VARCHAR},
      </if>
      <if test="gmtRefundPay != null">
        gmt_refund_pay = #{gmtRefundPay,jdbcType=TIMESTAMP},
      </if>
      <if test="refundFee != null">
        refund_fee = #{refundFee,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wmk.paydemo.entity.SystemRefund">
    update system_refund
    set out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      buyer_logon_id = #{buyerLogonId,jdbcType=VARCHAR},
      buyer_user_id = #{buyerUserId,jdbcType=VARCHAR},
      fund_change = #{fundChange,jdbcType=VARCHAR},
      gmt_refund_pay = #{gmtRefundPay,jdbcType=TIMESTAMP},
      refund_fee = #{refundFee,jdbcType=DOUBLE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>